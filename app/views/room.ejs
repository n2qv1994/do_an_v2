
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>PeerCDN Video Demo</title>
   <!--  <script src="http://localhost:3005/socket.io/socket.io.js"></script> -->
    <script src="/socket.io-client/dist/socket.io.js"></script>
    <script src="bower_components/jquery/dist/jquery.js"></script>
    <script src="bower_components/peerjs/peer.js"></script>

    <script src="peer-cdn/utils.js"></script>
    <script src="peer-cdn/peer-container.js"></script>
    <script src="peer-cdn/peer-manager.js"></script>
    <script src="peer-cdn/peer-request.js"></script>
    <script src="peer-cdn/peer-resource.js"></script>
    <script src="peer-cdn/peer-stats.js"></script>
    <script src="peer-cdn/peer-cache.js"></script>
    <script src="peer-cdn/peer-cache-size-limit.js"></script>
    <script src="peer-cdn/peer-history.js"></script>
    <script src="peer-cdn/peercdn.js"></script>

    <link rel="stylesheet" href="css/bootstrap.min.css">
    <link rel="stylesheet" href="css/font-awesome.min.css">
    <link rel="stylesheet" href="css/animate.css">
    <link rel="stylesheet" href="css/form-elements.css">
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="css/media-queries.css">
    
    <!-- Media type-->
    <script src="peer-media/peer-xhr.js"></script>

    <!-- Video JS Player-->
    <link href="https://vjs.zencdn.net/4.12/video-js.css" rel="stylesheet">
    <script src="external-lib/video.dev.js"></script>
    <script src="external-lib/videojs-media-sources.js"></script>
    <script src="external-lib/videojs.hls.js"></script>
    <script src="peer-media/peer-videojs-hls.js"></script>
    <style type="text/css">
        #serverProgress {
          width: 100%;
          background-color: #ddd;
        }

        #serverBar {
          width: 0%;
          height: 30px;
          background-color: #4CAF50;
          text-align: center;
          line-height: 30px;
          color: white;
        }

        #peerProgress {
          width: 100%;
          background-color: #ddd;
        }

        #peerBar {
          width: 0%;
          height: 30px;
          background-color: #188fca;
          text-align: center;
          line-height: 30px;
          color: white;
        }
    </style>
</head>
<body>
  <!-- Top menu -->
  <nav class="navbar navbar-inverse navbar-fixed-top navbar-no-bg" role="navigation" style="background-color: #283a44">
    <div class="container">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#top-navbar-1">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="#"><span color="#ffffff" style="font-size: 200%; font-weight: bold">Peer BK</span></a>
      </div>
      <!-- Collect the nav links, forms, and other content for toggling -->
      <div class="collapse navbar-collapse" id="top-navbar-1">
        <ul class="nav navbar-nav navbar-right">
          <li><a class="scroll-link" href="/">Home</a></li>
          <li><a class="scroll-link" href="#features">Demo</a></li>
          <li><a href="/management">Management</a></li>
          <li><a class="scroll-link" href="#how-it-works">Products</a></li>
          <li><a href="/p2p/document/index.html">Docs</a></li>
          <li><a class="scroll-link" href="#about-us">About</a></li>
          <li><a href="#">Login</a></li>
          <li><a href="#">Sign up</a></li>
        </ul>
      </div>
    </div>
  </nav>
<h2 style="margin-top: 100px">Live P2P Streaming CDN Demo</h2>
<p><%= data.user.username %></p>
<p><%= data.room_name %></p>
<div class="col-md-8 col-md-offset-2" height= "500px">
  <video id=example-video width=800 height=500 class="video-js vjs-default-skin" controls>
    <source
            src="<%= data.room_link %>"
            type="application/x-mpegURL">
  </video>
</div>

<div class="col-md-8 col-md-offset-2">
  <br>
  <p>Data from server</p>
  <div id="serverProgress">
    <div id="serverBar">0%</div>
  </div>
  <br>
  <p>Data from peer</p>
  <div id="peerProgress">
    <div id="peerBar">0%</div>
  </div>
  </div>

<div id="chartContainer" class="col-md-7 col-md-offset-2" style="height: 300px; margin-top: 50px">
</div>

<div id="ip_address"></div>

Peer Id: 
<ol id="list_peer_id" type="1" style="height: 400px; overflow-y: scroll;">
</ol>
</body>
</html>

<script type="text/javascript">
var player = videojs('example-video');
window.username = "<%- data.user.username %>";
window.room_id =  "<%- data.room_name %>";
window.peercdn = new PeerCDN({size_limit:500*1024*1024});
window.peercdn.connect("localhost:3005");
var info = {};

$.get("http://ipinfo.io", function(response) {
    $("#ip_address").text(response.ip);
    info.username = window.username;
    info.hostname = response.hostname; 
    info.city = response.city;
    info.region = response.region;
    info.country = response.country;
    info.origin = response.org;
    info.longitude = parseFloat(response.loc.slice(0,6));
    info.latitude = parseFloat(response.loc.slice(8,15));

    window.peercdn.emit("info", info);

}, "jsonp");

</script>
<script type="text/javascript" src="canvasjs.min.js"></script>
<script type="text/javascript">
  window.data = {
    speed : 0,
    type  : "" 
  };
  window.onload = function () {

    var dps_http = []; // dataPoints
    var dps_peer = [];

    var chart = new CanvasJS.Chart("chartContainer",{
      title :{
        text: "Dowload data"
      },  
     legend: {
          verticalAlign: "bottom",
          horizontalAlign: "center"
      },
      animationEnabled: true, 
      axisX:{      
        title: "Time"
      },
      axisY: {
        title: "Speed (Kb/s)"
      },   
      data: [{
        name: "Dowload http",
        legendMarkerType: "square",
        showInLegend: true, 
        type: "area",
        color: "rgba(40,175,101,0.6)",
        dataPoints: dps_http 
      },
      {
        name: "Dowload peer",
        legendMarkerType: "square",
        showInLegend: true, 
        type: "area",
        color: "rgba(0,75,141,0.7)",
        dataPoints: dps_peer 
      }]
    });

    var xVal = 0;
    var updateInterval = 500;
    var dataLength = 30; // number of dataPoints  visible at any point

    var updateChart = function (count) {
      count = count || 1;
      // count is number of times loop runs to generate random dataPoints.
      
      for (var j = 0; j < count; j++) { 
        if(window.data.type == "http") {
          dps_http.push({
            x: xVal,
            y: window.data.speed
          });
          dps_peer.push({
            x: xVal,
            y: 0
          });
          window.data.type = "";
          xVal++;
        }
        else if(window.data.type == "peer") {
          dps_http.push({
            x: xVal,
            y: 0
          });
          dps_peer.push({
            x: xVal,
            y: window.data.speed
          });
          window.data.type = "";
          xVal++;
        }
        else {
          dps_http.push({
            x: xVal,
            y: 0
          });
          dps_peer.push({
            x: xVal,
            y: 0
          });
          window.data.type = "";
          xVal++;
        }
      };
      if (dps_http.length > dataLength)
      {
        dps_http.shift();  
        dps_peer.shift();      
      }
      
      chart.render();   

    };

    // generates first set of dataPoints
    updateChart(dataLength); 

    // update chart after specified time. 
    setInterval(function(){updateChart()}, updateInterval); 

  }
  var time = formatDate(new Date());

  function formatDate(date) {
    var time = "";
    var day = date.getDate();
    var month = date.getMonth();
    var year = date.getFullYear();
    var hour = date.getHours();
    var minute = date.getMinutes();
    var second = date.getSeconds();

    time = hour + ":" + minute + ":" + second;
    return time;
  };

  </script>

